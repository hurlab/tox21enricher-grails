buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "http://repository.jboss.org/maven2/"}
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "org.grails.plugins:hibernate5:7.0.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
        //classpath "org.codehaus.groovy:groovy:2.5.6"
        //classpath "org.apache.ivy:ivy:2.3.0"

        classpath "org.codehaus.jsr166-mirror:jsr166y:1.7.0"
        classpath "org.codehaus.gpars:gpars:1.2.1"
    }
}

version "0.1"
group "tox21"

apply plugin:"groovy"
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://repository.jboss.org/maven2/"}
}

configurations {
    ivy
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }

}

configurations.all {
    resolutionStrategy {
        force 'org.codehaus.groovy:groovy-all:2.5.6'
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    compile localGroovy()

    //compile "org.codehaus.groovy:groovy:2.5.6"
    //compile "org.grails.plugins:ivy:2.3.0"

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.0.Final"
    compile "org.grails.plugins:gsp"
    compile "mysql:mysql-connector-java:8.0.20"
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.12'
    compile group: 'org.rosuda.REngine', name: 'Rserve', version: '1.8.1'
    compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7"
    compile "oauth.signpost:signpost-core:1.2.1.2"
    compile "oauth.signpost:signpost-commonshttp4:1.2.1.2"

    //for concurrency
    compile "org.codehaus.jsr166-mirror:jsr166y:1.7.0"
    compile "org.codehaus.gpars:gpars:1.2.1"

      compile 'org.springframework:spring-test:2.5'

    compileOnly "io.micronaut:micronaut-inject-groovy"

    console "org.grails:grails-console"

    profile "org.grails.profiles:web"

    


    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "javax.xml.bind:jaxb-api:2.3.0"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    runtime "org.hibernate:hibernate-ehcache:5.4.13.Final"

    //needed for connecting to mysql and postgres datasources
    runtime "mysql:mysql-connector-java:8.0.20"
    runtime group: 'org.postgresql', name: 'postgresql', version: '42.2.12'

    //needed for asynchronous enrichment and queueing 
    runtime "org.grails.plugins:async:4.0.0"
    //runtime "org.grails:grails-async-gpars:4.0.0"

    //vvv for backwards compatibility with old scripts during testing ONLY vvv
    testCompile "org.grails:grails-test-mixins:3.3.0"
    //------------------------------------------------------------------------

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"

    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
}

springBoot {
    mainClassName = 'tox21.Application'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.24.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}


assets {
    minifyJs = true
    minifyCss = true
}
