CREATE  TABLE "public".dataenricher_annotation_class ( 
	annoclassid          integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	annoclassname        varchar(50)  NOT NULL ,
	firsttermid          integer  NOT NULL ,
	lasttermid           integer  NOT NULL ,
	numberoftermids      integer  NOT NULL ,
	baseurl              varchar(255)  NOT NULL ,
	CONSTRAINT dataenricher_annotation_class_pkey PRIMARY KEY ( annoclassid )
 );

CREATE  TABLE "public".dataenricher_annotation_detail ( 
	annotermid           integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	annoterm             varchar(400)  NOT NULL ,
	annoclassid          integer  NOT NULL ,
	CONSTRAINT dataenricher_annotation_detail_pkey PRIMARY KEY ( annotermid ),
	CONSTRAINT dataenricher_annotat_annoclassid_07b9abba_fk_dataenric FOREIGN KEY ( annoclassid ) REFERENCES "public".dataenricher_annotation_class( annoclassid )  
 );

CREATE INDEX dataenricher_annotation_detail_annoclassid_07b9abba ON "public".dataenricher_annotation_detail ( annoclassid ASC );

CREATE  TABLE "public".dataenricher_annoterm_pairwise ( 
	pairwiseid           integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	term1uid             integer  NOT NULL ,
	term2uid             integer  NOT NULL ,
	term1size            integer  NOT NULL ,
	term2size            integer  NOT NULL ,
	common               integer  NOT NULL ,
	"union"              integer  NOT NULL ,
	jaccardindex         float8  NOT NULL ,
	pvalue               float8  NOT NULL ,
	qvalue               float8  NOT NULL ,
	CONSTRAINT dataenricher_annoterm_pairwise_pkey PRIMARY KEY ( pairwiseid )
 );

CREATE  TABLE "public".dataenricher_chemical_detail ( 
	casrnuid             integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	casrn                varchar(15)  NOT NULL ,
	testsubstance_chemname varchar(500)  NOT NULL ,
	molecular_formular   varchar(50)   ,
	iupac_name           varchar(1000)   ,
	inchis               varchar(1000)   ,
	inchikey             varchar(30)   ,
	smiles               varchar(600)   ,
	CONSTRAINT dataenricher_chemical_detail_pkey PRIMARY KEY ( casrnuid )
 );

CREATE  TABLE "public".dataenricher_chemicals_tox21 ( 
	casrnuid             integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	casrn                varchar(15)  NOT NULL ,
	testsubstance_chemname varchar(500)  NOT NULL ,
	molecular_formular   varchar(50)  NOT NULL ,
	iupac_name           varchar(1000)  NOT NULL ,
	inchis               varchar(1000)  NOT NULL ,
	inchikey             varchar(30)  NOT NULL ,
	smiles               varchar(600)  NOT NULL ,
	CONSTRAINT dataenricher_chemicals_tox21_pkey PRIMARY KEY ( casrnuid )
 );

CREATE  TABLE "public".dataenricher_mols ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	casrn                varchar(15)  NOT NULL ,
	"m"                  mol  NOT NULL ,
	CONSTRAINT dataenricher_mols_pkey PRIMARY KEY ( id )
 );

CREATE  TABLE "public".dataenricher_term2casrn_mapping ( 
	term2casrnmappinguid integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	annotermid           integer  NOT NULL ,
	annoclassid          integer  NOT NULL ,
	casrnuid_id          integer  NOT NULL ,
	CONSTRAINT dataenricher_term2casrn_mapping_pkey PRIMARY KEY ( term2casrnmappinguid ),
	CONSTRAINT dataenricher_term2ca_casrnuid_id_a80baf5a_fk_dataenric FOREIGN KEY ( casrnuid_id ) REFERENCES "public".dataenricher_chemical_detail( casrnuid )  
 );

CREATE INDEX dataenricher_term2casrn_mapping_casrnuid_id_a80baf5a ON "public".dataenricher_term2casrn_mapping ( casrnuid_id ASC );

CREATE  TABLE "public".result_set_model ( 
	id                   bigint GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	"version"            bigint   ,
	CONSTRAINT result_set_model_pkey PRIMARY KEY ( id )
 );

CREATE OR REPLACE FUNCTION public.dice_sml(sfp, sfp)
 RETURNS double precision
 LANGUAGE c
 IMMUTABLE STRICT COST 10
AS '$libdir/rdkit', $function$sfp_dice_sml$function$
;

CREATE OR REPLACE FUNCTION public.dice_sml_op(sfp, sfp)
 RETURNS boolean
 LANGUAGE c
 IMMUTABLE STRICT COST 10
AS '$libdir/rdkit', $function$sfp_dice_sml_op$function$
;

